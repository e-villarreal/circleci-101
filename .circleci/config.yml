version: 2
jobs:
  build:
    working_directory: ~/goldkiwi
    docker:
        # - image: openjdk:7-jdk
        - image: circleci/openjdk:8-node-browsers

    steps:
        - checkout
        - run: |
                export ORACLE_HOME="$HOME/goldkiwi/vendor/instantclient_12_1" &&
                export _JAVA_OPTIONS="-Djava.library.path=$HOME/sqlrelay/java/com/firstworks/sqlrelay" && 
                export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$ORACLE_HOME/lib:$HOME/sqlrelay/lib:$HOME/sqlrelay/java/com/firstworks/sqlrelay:$HOME/sqlrelay/libexec/sqlrelay" &&
                export PATH="$PATH:$HOME/sqlrelay/bin"

        - run: mkdir log && cd log && mkdir social_log4j 
        - run: cd social && cp src/main/resources/log4j.properties.test src/main/resources/log4j.properties 
        - run:
            name: Install openjdbc7.jar from goldkiwi/analytics/src/main/webapp/WEB-INF/lib/ojdbc7.jar
            command: mvn install:install-file -Dfile=$HOME/goldkiwi/analytics/src/main/webapp/WEB-INF/lib/ojdbc7.jar -DgroupId=com.oracle -DartifactId=ojdbc7  -Dversion=12.1.0.1 -Dpackaging=jar 

        - run: 
            name: DskipTests Install
            command: mvn install -DskipTests

        - save_cache:
            key: dependency-cache
            paths:
                - $HOME/goldkiwi/vendor/instantclient_12_1 
                - $HOME/sqlrelay

        # ==============  Add repos on sources.list  =================

        - run: 
            name: Add repos to sources.lists
            command: | 
                      cd /etc/apt && echo 'deb http://archive.ubuntu.com/ubuntu/ trusty universe' | sudo tee -a sources.list && 
                      echo 'deb-src http://archive.ubuntu.com/ubuntu/ trusty universe' | sudo tee -a sources.list && 
                      echo 'deb http://security.ubuntu.com/ubuntu trusty-security main' | sudo tee -a sources.list && 
                      echo 'deb-src http://security.ubuntu.com/ubuntu trusty-security main' | sudo tee -a sources.list && 
                      echo 'deb http://security.ubuntu.com/ubuntu trusty-security universe' | sudo tee -a sources.list


        - run: sudo apt-get update
        - run: sudo apt-get -f --allow-unauthenticated install gcc-4.6
        - run: sudo apt-get -f --allow-unauthenticated install g++-4.6
        - run: sudo apt-get install make
        - run: sudo apt-get install build-essential
        - run: sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.6 25
        - run: sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.6 25

        - run: |
                if [[ ! -e $HOME/goldkiwi/vendor/instantclient_12_1 ]]; then 
                    cd vendor &&  
                    wget -N  https://s3-us-west-1.amazonaws.com/sra-ops/rudiments-0.44.tar.gz  && 
                    wget -N  https://s3-us-west-1.amazonaws.com/sra-ops/instantclient-sdk-linux.x64-12.1.0.1.0.zip  && 
                    wget -N  https://s3-us-west-1.amazonaws.com/sra-ops/instantclient-basic-linux.x64-12.1.0.1.0.zip  && 
                    wget -N  https://s3-us-west-1.amazonaws.com/sra-ops/sqlrelay-0.53.tar.gz  && 
                    unzip instantclient-basic-linux.x64-12.1.0.1.0.zip && 
                    unzip instantclient-sdk-linux.x64-12.1.0.1.0.zip  
                fi

        # ################################  Falla desde aqui: ################################################################################################################################################################

        - run: |
                if [[ ! -e $HOME/sqlrelay ]]; then 
                    cd vendor && 
                    tar zxvf rudiments-0.44.tar.gz && 
                    cd rudiments-0.44 && 
                    ./configure --prefix=$HOME/sqlrelay --exec-prefix=$HOME/sqlrelay && 
                    make && 
                    make install && 
                    cd ../ && 
                    tar zxvf sqlrelay-0.53.tar.gz && 
                    cd sqlrelay-0.53 && 
                    ./configure --prefix=$HOME/sqlrelay --exec-prefix=$HOME/sqlrelay --with-rudiments-prefix=$HOME/sqlrelay --with-oracle-instantclient-prefix=$HOME/goldkiwi/vendor/instantclient_12_1  --with-oracle-home=$HOME/goldkiwi/vendor/instantclient_12_1  --disable-python --disable-mysql --disable-postgresql --disable-sqlite --disable-sybase --disable-odbc --disable-db2 --disable-perl --disable-ruby --disable-php --disable-tcl --disable-erlang --enable-shared=yes && 
                    make && make install
                fi

        # ################################    Hasta aqui    ################################################################################################################################################################

        - run: 
            name: Post command
            command: sudo mkdir -p $HOME/sqlrelay/etc && sudo cp vendor/conf/sqlrelay.conf $HOME/sqlrelay/etc/sqlrelay.conf           

  test:
    docker:
        - image: circleci/openjdk:8-node-browsers
    steps:
        - run: export ORACLE_HOME="$HOME/goldkiwi/vendor/instantclient_12_1" 
        - run: export _JAVA_OPTIONS="-Djava.library.path=$HOME/sqlrelay/java/com/firstworks/sqlrelay"
        - run: export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$ORACLE_HOME/lib:$HOME/sqlrelay/lib:$HOME/sqlrelay/java/com/firstworks/sqlrelay:$HOME/sqlrelay/libexec/sqlrelay"
        - run: export PATH="$PATH:$HOME/sqlrelay/bin"
        # - run: cd $HOME/sqlrelay/bin && ./sqlr-stop SIGKILL && ./sqlr-start -id rovi -config $HOME/sqlrelay/etc/sqlrelay.conf && ./sqlr-start -id social -config $HOME/sqlrelay/etc/sqlrelay.conf && ./sqlr-start -id analytics -config $HOME/sqlrelay/etc/sqlrelay.conf:
            # background: true
        
        - run: ls

        - run: cd social && mvn test site && cp -r coverage-report $CIRCLE_ARTIFACTS/social && cp -r target/site $CIRCLE_ARTIFACTS/social
        - run: cd ingestor && mvn test site && cp -r  coverage-report $CIRCLE_ARTIFACTS/ingestor && cp -r target/site $CIRCLE_ARTIFACTS/ingestor
        - run: cp -r $HOME/sqlrelay/var/sqlrelay/debug $CIRCLE_ARTIFACTS 
        - run: cd analytics && mvn clean package site && cp -r coverage-report $CIRCLE_ARTIFACTS/analytics && cp -r target/site $CIRCLE_ARTIFACTS/analytics
        - run: cd common_lib && mvn test site && cp -r coverage-report $CIRCLE_ARTIFACTS/common && cp -r target/site $CIRCLE_ARTIFACTS/common

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test
